version: '3.8'

services:  
  minio:
    container_name: minio
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web console
    restart: always
    networks:
      mynet:
        aliases:
          - my-localhost  # Alias for localhost access
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server /data --console-address ":9001"
    healthcheck:
        test: ["CMD-SHELL", "wget -q -O - http://localhost:9000/minio/health/live >/dev/null 2>&1 || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
  flask_api:
      build:
        context: ./ml        
        dockerfile: Dockerfile
      container_name: flask
      depends_on:
      - db
      ports:
        - "5000:5000"
      networks:
        - mynet
      restart: unless-stopped    
      environment:
        - DB_HOST=db
        - DB_PORT=5432
        - DB_NAME=bank         
        - DB_USER=admin
        - DB_PASSWORD=admin123  
        - MINIO_HOST=minio       
        - MINIO_PORT=9000
        - MINIO_ACCESS_KEY=admin
        - MINIO_SECRET_KEY=admin123
        - MINIO_SECURE=false

  db:
      container_name: postgres
      image: postgres:latest
      environment:
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: admin123
        PGDATA: /data/postgres
        POSTGRES_DB: bank
      volumes:
        - db:/data/postgres
      ports:
        - "5332:5432"
      networks:
        - mynet
      restart: unless-stopped
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d postgres" ]
        interval: 30s
        timeout: 10s
        retries: 5


networks:
  mynet:
    driver: bridge

volumes:
  minio_data:
    driver: local
  db:



